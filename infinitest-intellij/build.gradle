description = 'Infinitest for IntelliJ'

repositories {
    maven { url "http://dl.bintray.com/infinitest/intellij/" }
}


dependencies {
    ext.intellijVersion = "12.1.4"
    ext.providedDeps = [
        "org.infinitest.intellij:intellij-annotations:${ext.intellijVersion}",
        "org.infinitest.intellij:intellij-extensions:${ext.intellijVersion}",
        "org.infinitest.intellij:intellij-idea:${ext.intellijVersion}",
        "org.infinitest.intellij:intellij-openapi:${ext.intellijVersion}",
        "org.infinitest.intellij:intellij-util:${ext.intellijVersion}",
        "org.infinitest.intellij:intellij-trove4j:${ext.intellijVersion}",
        "jdom:jdom:1.0"
    ]
    implementation 'org.picocontainer:picocontainer:2.15'
    implementation ext.guava
    implementation project(':infinitest-runner')

    implementation 'log4j:log4j:1.2.17'
    implementation project(':infinitest-lib')
    implementation 'org.apache.sanselan:sanselan:0.97-incubator'

    testImplementation ext.assertjCore
    testImplementation(ext.mockitoCore) {
        exclude(module: 'hamcrest-core')
    }
    testImplementation ext.hamcrest
    testImplementation ext.commonsLang


    ext.providedDeps.each {
        compileOnly it
        testImplementation it
    }
}

// TODO use intellij gradle plugin instead of resource filtering and distributions
apply plugin: 'distribution'

processResources {
    filesMatching('**/plugin.xml') {
        expand(
                version: version
        )
    }
}

distributions {
    plugin {
        baseName = project.name+'-dist'

        contents {
            into('/infinitest/lib/') {
                from jar

                // FIXME shouldn't we use
//                from configurations.runtimeClasspath.files.
//                        findAll { it.name.endsWith('jar') }

                from(configurations.compile) {
                    include 'infinitest-*.jar'
                    include 'guava-*.jar'
                    include 'jgrapht-*.jar'
                    include 'javassist-*.jar'
                    include 'junit-jupiter-api-*.jar'
                    include 'junit-jupiter-engine-*.jar'
                }
              //  from configurations.compile
                dirMode = 0755
                fileMode = 0644
            }
        }
    }
}
tasks.pluginDistTar.enabled = false

